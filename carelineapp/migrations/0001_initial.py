# Generated by Django 2.0.8 on 2018-10-15 22:38

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('wagtailcore', '0040_page_draft_title'),
        ('wagtaildocs', '0008_document_file_size'),
    ]

    operations = [
        migrations.CreateModel(
            name='BasicPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('author', models.CharField(max_length=255)),
                ('date', models.DateField(verbose_name='Post date')),
                ('body', wagtail.core.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BasicPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='carelineapp.BasicPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carelineapp_basicpagetag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyAddressSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, help_text='Enter The Company Name', max_length=255)),
                ('building_name', models.CharField(blank=True, help_text='Enter The Building Name', max_length=255)),
                ('street_number', models.CharField(blank=True, help_text='Enter The Street Number', max_length=255)),
                ('street_name', models.CharField(blank=True, help_text='Enter The Street Name', max_length=255)),
                ('town', models.CharField(blank=True, help_text='Enter The Suburb Name', max_length=255)),
                ('county', models.CharField(blank=True, help_text='Enter The State Territory', max_length=255)),
                ('postcode', models.CharField(blank=True, help_text='Enter The Postcode', max_length=255)),
                ('pobox', models.CharField(blank=True, help_text='Enter The PO Box if any', max_length=255)),
                ('phone', models.CharField(blank=True, help_text='Enter Phone Number', max_length=255)),
                ('email', models.CharField(blank=True, help_text='Enter General Email Address', max_length=255)),
                ('copyright', models.CharField(blank=True, help_text='Enter Footer Copyright', max_length=1000)),
                ('company_number', models.CharField(blank=True, help_text='Enter Company ABN', max_length=1000)),
                ('openingtimes', models.CharField(blank=True, help_text='Enter Opening times', max_length=1000)),
                ('description_header', models.CharField(blank=True, help_text='Enter Footer Description Title', max_length=200)),
                ('description_one', models.CharField(blank=True, help_text='Enter Footer Description', max_length=1000)),
                ('description_two', models.CharField(blank=True, help_text='Enter Footer Description', max_length=1000)),
                ('description_three', models.CharField(blank=True, help_text='Enter Footer Description', max_length=1000)),
                ('company_footnote', models.CharField(blank=True, help_text='Enter Company Foot Note', max_length=1000)),
                ('company_url', models.CharField(blank=True, help_text='Enter Company website domain name', max_length=100)),
                ('company_website_name', models.CharField(blank=True, help_text='Enter Company website name', max_length=100)),
                ('company_website_description', models.CharField(blank=True, help_text='Enter Company website description', max_length=100)),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.Site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContactUsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('author', models.CharField(max_length=255)),
                ('date', models.DateField(verbose_name='Post date')),
                ('phone_number', models.IntegerField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ContactUsPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='carelineapp.ContactUsPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carelineapp_contactuspagetag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GoogleSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tagmanager', models.CharField(blank=True, help_text='Your Google Tag Manager code', max_length=255)),
                ('analytics', models.CharField(blank=True, help_text='Your Google Analytics code', max_length=255)),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.Site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LoginPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('author', models.CharField(max_length=255)),
                ('date', models.DateField(verbose_name='Post date')),
                ('email_helper_text', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('password_helper_text', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('keep_me_logged_helper_text', wagtail.core.fields.RichTextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='LoginPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='carelineapp.LoginPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carelineapp_loginpagetag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReferFriendPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('author', models.CharField(max_length=255)),
                ('date', models.DateField(verbose_name='Post date')),
                ('action_title', models.CharField(blank=True, default='send to a friends phone', help_text='This is for the action title text on the image banner', max_length=255, null=True)),
                ('section_name', models.CharField(blank=True, default='refer a friend', help_text='This is for the section name text on the image banner', max_length=255, null=True)),
                ('sub_title', models.CharField(blank=True, default='sending topics', help_text='This is for the subtitle text on the image banner', max_length=255, null=True)),
                ('helper_text_one', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('helper_text_two', wagtail.core.fields.RichTextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ReferFriendPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='carelineapp.ReferFriendPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carelineapp_referfriendpagetag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SendSmsLink',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('author', models.CharField(max_length=255)),
                ('date', models.DateField(verbose_name='Post date')),
                ('name_helper_text', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('friends_mobile_number_helper_text', wagtail.core.fields.RichTextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SendSmsLinkPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='carelineapp.SendSmsLink')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carelineapp_sendsmslinkpagetag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SignupPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('author', models.CharField(max_length=255)),
                ('date', models.DateField(verbose_name='Post date')),
                ('first_name_helper_text', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('last_name_helper_text', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('email_helper_text', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('mobile_helper_text', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('password_helper_text', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('agree_terms_helper_text', wagtail.core.fields.RichTextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SignupPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='carelineapp.SignupPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carelineapp_signuppagetag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SMSTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(help_text='Add {{topic}} for Name of Service and {{name}} for User Name /and {{link}} for the service pdf link', max_length=160)),
                ('from_sms', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='SupportUsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('author', models.CharField(max_length=255)),
                ('date', models.DateField(verbose_name='Post date')),
                ('action_title', models.CharField(blank=True, default='text to come', max_length=255)),
                ('section_name', models.CharField(blank=True, default='support us', max_length=255)),
                ('sub_title', models.CharField(blank=True, default='text to come', max_length=255)),
                ('tags', modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='carelineapp.ReferFriendPageTag', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SupportUsPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='carelineapp.SupportUsPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carelineapp_supportuspagetag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of counselling topic', max_length=50)),
                ('introduction', models.CharField(help_text='Introduction heading of counselling topic', max_length=300)),
                ('custom_url', models.URLField(blank=True, help_text='Custom URL', null=True)),
                ('counselling_topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
            ],
        ),
        migrations.AddField(
            model_name='signuppage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='carelineapp.SignupPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='sendsmslink',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='carelineapp.SendSmsLinkPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='referfriendpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='carelineapp.ReferFriendPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='loginpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='carelineapp.LoginPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='contactuspage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='carelineapp.ContactUsPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='basicpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='carelineapp.BasicPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
